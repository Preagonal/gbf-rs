name: Code Coverage

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  coverage:
    name: Run Code Coverage
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Install Rust
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      # Step 3: Install llvm-tools-preview
      - name: Install llvm-tools-preview
        run: rustup component add llvm-tools-preview

      # Step 4: Install grcov
      - name: Install grcov
        run: cargo install grcov

      # Step 5: Set up environment
      - name: Set up environment
        run: |
          mkdir -p target/coverage
          export CARGO_INCREMENTAL=0
          export RUSTFLAGS="-Cinstrument-coverage"
          export LLVM_PROFILE_FILE="target/coverage/%p-%m.profraw"
        env:
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: "-Cinstrument-coverage"
          LLVM_PROFILE_FILE: target/coverage/%p-%m.profraw

      # Step 6: Build Project
      - name: Build Project
        run: cargo build --workspace

      # Step 7: Run tests with coverage
      - name: Run tests with coverage
        run: cargo test --workspace --verbose
        env:
          LLVM_PROFILE_FILE: target/coverage/%p-%m.profraw

      # Step 8: Verify profraw files
      - name: Verify coverage files
        run: ls -l target/coverage/

      # Step 9: Generate grcov report
      - name: Generate grcov report
        run: |
          mkdir -p target/coverage/html
          grcov target/coverage -s . -b ./target/debug -t html --llvm --branch --ignore-not-existing -o target/coverage/html

      # Step 10: Upload Coverage Report
      - name: Upload Coverage Report
        uses: actions/upload-artifact@v3
        with:
          name: grcov-coverage-report
          path: target/coverage/html

      # Optional: Upload coverage data to Codecov
      - name: Upload to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: target/coverage/*.profraw
          flags: unittests
          name: gbf-rs
