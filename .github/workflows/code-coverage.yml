name: Code Coverage

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  coverage:
    name: Run Code Coverage
    runs-on: ubuntu-latest

    env:
      CARGO_INCREMENTAL: 0
      RUSTFLAGS: "-Cinstrument-coverage -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off -Zpanic_abort_tests -Cpanic=abort"
      LLVM_PROFILE_FILE: "target/coverage/%p-%m.profraw"
      RUSTDOCFLAGS: "-Cpanic=abort"
      RUSTC_BOOTSTRAP: 1

    steps:
      # Step 1: Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Install Rust
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      # Step 3: Install llvm-tools-preview
      - name: Install llvm-tools-preview
        run: rustup component add llvm-tools-preview

      # Step 4: Install grcov
      - name: Install grcov
        run: cargo install grcov

      # Step 5: Prepare coverage directory
      - name: Prepare coverage directory
        run: mkdir -p target/coverage

      # Step 6: Build the Project with instrumentation
      - name: Build Project
        run: cargo build --workspace

      # Step 7: Run tests with coverage instrumentation
      - name: Run tests with coverage
        run: cargo test --workspace --all-targets --verbose

      # Step 8: Generate lcov.info with grcov
      - name: Generate LCOV file
        run: |
          # Create a coverage/ subdir to store the LCOV output
          mkdir -p target/coverage
          # Generate the LCOV (lcov.info) file
          grcov target/coverage \
            -s . \
            -b target/debug \
            --llvm \
            --branch \
            --ignore-not-existing \
            -t lcov \
            -o target/coverage/lcov.info

      # Step 9: Upload coverage data to Codecov
      - name: Upload to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: target/coverage/lcov.info
          flags: unittests
